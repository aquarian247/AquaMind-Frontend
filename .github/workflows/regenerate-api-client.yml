name: Regenerate API Client

on:
  repository_dispatch:
    types: [api-spec-updated]

jobs:
  regenerate-client:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Download OpenAPI spec from backend workflow
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            
            // Create directory if it doesn't exist
            if (!fs.existsSync('../AquaMind')) {
              fs.mkdirSync('../AquaMind', { recursive: true });
            }
            if (!fs.existsSync('../AquaMind/api')) {
              fs.mkdirSync('../AquaMind/api', { recursive: true });
            }
            
            // Get the latest artifact from the backend repo's main branch
            const { owner, repo } = context.repo;
            const backendOwner = 'aquarian247';
            const backendRepo = 'AquaMind';
            const backendBranch = context.payload.client_payload.backend_branch || 'main';
            
            console.log(`Fetching latest workflow run for branch: ${backendBranch}`);
            
            // Get workflow runs for the CI workflow
            const workflowRuns = await github.rest.actions.listWorkflowRunsForRepo({
              owner: backendOwner,
              repo: backendRepo,
              branch: backendBranch,
              status: 'success',
              per_page: 1
            });
            
            if (workflowRuns.data.workflow_runs.length === 0) {
              core.setFailed('No successful workflow runs found for the backend repository');
              return;
            }
            
            const latestRun = workflowRuns.data.workflow_runs[0];
            console.log(`Found workflow run: ${latestRun.id}`);
            
            // Get artifacts for the workflow run
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: backendOwner,
              repo: backendRepo,
              run_id: latestRun.id
            });
            
            const apiSpecArtifact = artifacts.data.artifacts.find(
              artifact => artifact.name === "api-spec"
            );
            
            if (!apiSpecArtifact) {
              core.setFailed('No api-spec artifact found');
              return;
            }
            
            console.log(`Found api-spec artifact: ${apiSpecArtifact.id}`);
            
            // Download the artifact
            const download = await github.rest.actions.downloadArtifact({
              owner: backendOwner,
              repo: backendRepo,
              artifact_id: apiSpecArtifact.id,
              archive_format: 'zip'
            });
            
            fs.writeFileSync('api-spec.zip', Buffer.from(download.data));
            
            // Extract the artifact
            const AdmZip = require('adm-zip');
            const zip = new AdmZip('api-spec.zip');
            zip.extractAllTo('../AquaMind/api', true);
            
            console.log('API spec artifact downloaded and extracted successfully');
      
      - name: Generate API client
        run: npm run generate:api
      
      - name: Check for changes
        id: git-check
        run: |
          git add -A
          git diff --cached --quiet && echo "changes=false" >> $GITHUB_OUTPUT || echo "changes=true" >> $GITHUB_OUTPUT
      
      - name: Create Pull Request
        if: steps.git-check.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: regenerate API client for ${{ github.event.client_payload.backend_commit }}"
          title: "chore: regenerate API client from OpenAPI spec"
          body: |
            This PR was automatically generated to update the TypeScript API client based on changes to the OpenAPI specification.
            
            ## Details
            - Backend commit: ${{ github.event.client_payload.backend_commit }}
            - Backend branch: ${{ github.event.client_payload.backend_branch }}
            - Backend workflow: ${{ github.event.client_payload.backend_workflow_url }}
            
            Please review the changes to ensure they are compatible with the current frontend implementation.
          branch: auto/api-client-update
          base: main
          labels: spec-sync
          delete-branch: true
      
      - name: Report status
        if: steps.git-check.outputs.changes == 'true'
        run: echo "✅ API client regenerated and PR created successfully"
      
      - name: Report no changes
        if: steps.git-check.outputs.changes == 'false'
        run: echo "ℹ️ No changes detected in the API client"
